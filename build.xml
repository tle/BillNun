<project xmlns:ivy="antlib:org.apache.ivy.ant" default="build">
	<property file="build.properties" />

	<!-- war directory-->
	<property name="war.dir" location="war"/>

	<!-- Ivy dependencies are put here -->
	<property name="lib.dir" location="lib"/>
	
	<!-- Used in ivy.xml -->
	<property name="gwt-version" value="2.0.4" />
	<property name="gae-version" value="1.3.8" />
	
	<!-- sdk directories -->
	<property name="gae.sdk.dir" location="${lib.dir}/appengine-java-sdk"/>
	
	<!-- This isn't actually optional, but the app engine sdk only exists after you run a resolve -->
	<import optional="true" file="${gae.sdk.dir}/config/user/ant-macros.xml" />
		
	<path id="project.classpath">
		<pathelement path="${war.dir}/WEB-INF/classes" />
	
		<fileset dir="${war.dir}/WEB-INF/lib">
			<include name="**/*.jar" />
		</fileset>

		<fileset dir="${gae.sdk.dir}/lib">
			<include name="shared/**/*.jar" />
		</fileset>

		<pathelement location="${lib.dir}/gwt-user.jar">
		
		</pathelement>
		<fileset dir="${lib.dir}" includes="gwt-dev*.jar"/>
		
		<pathelement location="${lib.dir}/jsr311-api.jar"/>
	</path>

	<!-- Dependencies Management -->
    <target name="resolve" description="--> retrieve dependencies with ivy">
        <ivy:retrieve pattern="${lib.dir}/[artifact](-[classifier]).[ext]" />
    	
    	<unzip dest="${lib.dir}" src="${lib.dir}/appengine-java-sdk.zip" />
    	<delete file="${lib.dir}/appengine-java-sdk.zip"/>
    	<move todir="${lib.dir}/appengine-java-sdk">
			<fileset dir="${lib.dir}/appengine-java-sdk-${gae-version}"/>
		</move>
    </target>
    
	<target name="copyjars" description="Copies all the needed runtime jars into the war">
		<!-- Clear the lib folder before copying jars in -->
		<delete dir="${war.dir}/WEB-INF/lib"/>

		<copy todir="${war.dir}/WEB-INF/lib" flatten="true">
			<fileset dir="${gae.sdk.dir}/lib/user">
				<include name="**/*.jar" />
			</fileset>
		</copy>
		<copy todir="${war.dir}/WEB-INF/lib" flatten="true">
			<fileset dir="${lib.dir}">
				<include name="*.jar" />
				<include name="gwt-servlet.jar" />
				<include name="jersey*.jar" />
				<include name="asm.jar" />
				<include name="jsr311-api.jar" />
				<exclude name="*javadoc.jar" />
			</fileset>
		</copy>
		
	</target>

	<target name="datanucleusenhance" depends="compile"
	      description="Performs JDO enhancement on compiled data classes.">
		<enhance_war war="${war.dir}" />
	</target>

	<target name="runserver" depends="datanucleusenhance"
	      description="Starts the development server.">
		<dev_appserver war="war" />
	</target>

	<target name="runserver-debug" depends="datanucleusenhance" description="Starts the development server.">
		<dev_appserver war="war" port="8888" >
			<options>
				<arg value="--jvm_flag=-Xdebug"/>
				<arg value="--jvm_flag=-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9999"/>
			</options>
		</dev_appserver>
	</target>

	<target name="compile" depends="copyjars"
      description="Compiles Java source and copies other source files to the WAR.">
		<mkdir dir="${war.dir}/WEB-INF/classes" />
		<copy todir="${war.dir}/WEB-INF/classes">
			<fileset dir="src">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<javac
	    srcdir="src"
	    destdir="${war.dir}/WEB-INF/classes"
	    classpathref="project.classpath"
	    debug="on" />
	</target>

	<target name="gwt-compile" depends="compile" description="GWT compile to JavaScript">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
			<classpath>
				<pathelement location="src"/>
				<path refid="project.classpath"/>
			</classpath>
			<!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
			<jvmarg value="-Xmx256M"/>
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg line="-style PRETTY"/>
			<arg value="com.testapp.Sample_gwt"/>
		</java>
	</target>

	<target name="devmode" depends="compile" description="Run in GWT development mode">
		<java failonerror="true" fork="true" classname="com.google.gwt.dev.DevMode">
			<classpath>
				<pathelement location="src"/>
				<path refid="project.classpath"/>
			</classpath>
			<jvmarg value="-Xmx256M"/>
			<arg value="-startupUrl"/>
			<arg value="Sample_gwt.html"/>
			<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
			<arg value="com.testapp.Sample_gwt"/>
		</java>
	</target>

	<target name="build" depends="gwt-compile" description="Build this project (must resolve before this)" />

	<target name="clean" description="Clean">
		<delete dir="${war.dir}/sample_gwt"/>
		<delete dir="${war.dir}/WEB-INF/lib"/>
		<delete dir="${war.dir}/WEB-INF/classes"/>
		<delete dir="${war.dir}/WEB-INF/appengine-generated"/>
	</target>
	
</project>